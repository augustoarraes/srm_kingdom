package com.srmasset.api.controllers;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.srmasset.api.dtos.ConversaoResponseDto;
import com.srmasset.api.infra.ConversaoProducerInfra;
import com.srmasset.api.services.TaxaCambioService;
import com.srmasset.api.services.TransacaoService;

@RestController
@CrossOrigin(origins="*", maxAge=3600)
@RequestMapping("/transacao")
public class TransacaoController {
	
	private final TransacaoService transacaoService;
	private final ConversaoProducerInfra conversaoProducerInfra;

	public TransacaoController(TransacaoService transacaoService,
			ConversaoProducerInfra conversaoProducerInfra) {
		this.transacaoService = transacaoService;
		this.conversaoProducerInfra = null;
	}
	
	/**
	 * Via Mensagem, serviço de infra da API
	 * @param idProduto
	 * @param idMoedaDestino
	 * @param quantidade
	 * @return
	 */
	@PostMapping("/converter/fila") 
    public ResponseEntity<String> converterMoedaFila(@RequestParam long idProduto,
                                                 @RequestParam long idMoedaDestino,
                                                 @RequestParam double quantidade) {
        String mensagem = idProduto + "," + idMoedaDestino + "," + quantidade;
        conversaoProducerInfra.enviarMensagem(mensagem);
        return ResponseEntity.ok("Solicitação de conversão enviada para processamento.");
    }
	
	/**
	 * Via API direto
	 * @param idProduto
	 * @param idMoedaDestino
	 * @param quantidade
	 * @return
	 */
	@PostMapping("/converter") 
    public ResponseEntity<Object> converterMoeda(@RequestParam long idProduto,
                                                 @RequestParam long idMoedaDestino,
                                                 @RequestParam double quantidade) {
        try {
        	ConversaoResponseDto response = this.transacaoService.converterMoeda(idProduto, idMoedaDestino, quantidade);
            return ResponseEntity.ok(response);
        } catch (RuntimeException e) {
            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(e.getMessage());
        }
    }
	

}
